version: '3'
services:
    consul-bootstrap:
        image: consul:1.7.1
        hostname: "consul-bootstrap"
        ports:
          - 8500:8500
          - 8443:8443
          - 8400:8400
          - 8301:8301
          - 8301:8301/udp
          - 8302:8302
          - 8302:8301/udp
          - 8300:8300
          - 8600:8600
        command: "agent -server -bootstrap -ui -client 0.0.0.0 -bind '{{ GetInterfaceIP \"eth0\" }}'"
        networks:
          - circa

    consul-server:
      hostname: "consul-server"
      image: consul:1.7.1
      command: "agent -server -retry-join consul-bootstrap -client 0.0.0.0 -bind '{{ GetInterfaceIP \"eth0\" }}'"
      depends_on:
        - consul-bootstrap
      volumes:
        - consul_data:/consul/data
      networks:
        - circa

    consul-client:
      image: consul:1.7.1
      command: "agent -retry-join consul-bootstrap -client 0.0.0.0 -bind '{{ GetInterfaceIP \"eth0\" }}'"
      depends_on:
        - consul-bootstrap
      networks:
        - circa


    vault:
        depends_on:
          - consul-server
        image: vault:latest
        hostname: "vault"
        restart: always
        cap_add:
          - IPC_LOCK
          - ALL
        ports:
          - 8200:8200
        environment:
          VAULT_LOCAL_CONFIG: '{"backend": {"consul": {"address": "consul-bootstrap:8500", "path": "vault/"}}, "listener": {"tcp": {"address": "0.0.0.0:8200", "tls_disable": "1"}}, "default_lease_ttl": "24h", "ui":true, "max_lease_ttl": "720h", "disable_mlock":true}'
          VAULT_ADDR: '0.0.0.0:8200'
        command:
          - server
        ulimits:
          nproc: 65535
        privileged: true
        networks:
          - circa
    mongo:
      image: mongo:latest
      ports:
        - 27017:27017
      networks:
        - circa
      volumes:
        - mongo_data:/data/db

    elasticsearch:
      image: docker.elastic.co/elasticsearch/elasticsearch:7.6.0
      ports:
        - 9200:9200
        - 9300:9300
      environment:
        - discovery.type=single-node
        - http.host=0.0.0.0
        - transport.host=localhost
        - network.host=0.0.0.0
        - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      ulimits:
        memlock:
          soft: -1
          hard: -1
      networks:
        - circa
      volumes:
        - es_data:/usr/share/elasticsearch/data

    kibana:
      image: docker.elastic.co/kibana/kibana:7.6.0
      environment:
        - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
      ports:
       - 5601:5601
      networks:
        - circa
      depends_on:
        - elasticsearch

    jaeger:
      hostname: 'jaeger'
      image: jaegertracing/all-in-one:1.17.0
      environment:
        - SPAN_STORAGE_TYPE=elasticsearch
        - ES_SERVER_URLS=http://elasticsearch:9200
        - ES_TAGS_AS_FIELDS_ALL=true
      ports:
        # Thrift compact
        - 6831:6831
        # UI port
        - 16686:16686
      depends_on:
        - elasticsearch
      networks:
        - circa

    # grafana:
    #   hostname: 'grafana'
    #   image: grafana/grafana
    #   container_name: grafana
    #   restart: unless-stopped
    #   ports:
    #     - 3000:3000
    #   networks:
    #     - circa
    #   volumes:
    #     - grafana:/var/lib/grafana

    # prometheus:
    #   hostname: 'prometheus'
    #   build: ./prometheus
    #   restart: unless-stopped
    #   ports:
    #     - '9090:9090'
    #   networks:
    #     - circa
    #   volumes:
    #     - prometheus:/prometheus
    redis:
      hostname: 'redis'
      image: redis
      container_name: redis
      restart: unless-stopped
      networks:
        - circa
      ports:
        - 6379:6379
      volumes:
        - redis:/data

    rabbitmq:
      hostname: 'rabbitmq'
      image: rabbitmq:3-management
      ports:
          - 25676:25676
          - 5672:5672
          - 15672:15672
      volumes:
          - rabbit_data:/var/lib/rabbitmq

networks:
  circa:
    driver: bridge
volumes:
  mongo_data:
    driver: local
  es_data:
    driver: local
  graylog_journal:
    driver: local
  consul_data:
    driver: local
  grafana:
    driver: local
  prometheus:
    driver: local
  redis:
    driver: local
  rabbit_data:
    driver: local